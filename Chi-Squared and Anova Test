{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [
        "mm32VioTOmBG",
        "JMZmheVHOpxd",
        "QMCi_UIkOwvh",
        "-zgi0poHO2jz",
        "OtK2D9iiQdRq",
        "daHtRryd0AOt"
      ],
      "authorship_tag": "ABX9TyPQAbB1BLyEYFJa5kWp8UVe",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/dudumlc/Data-Analysis/blob/main/Chi-Squared%20and%20Anova%20Test\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## IMPORTAÇÃO DE BIBLIOTECA"
      ],
      "metadata": {
        "id": "mm32VioTOmBG"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "2HIgOurZGGoT"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from scipy import stats\n",
        "from scipy.stats import f_oneway, shapiro, bartlett\n",
        "from ipywidgets import interact, widgets"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "7CCLhpkMp_m_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## IMPORTAÇÃO DO DATASET A SER TRABALHADO"
      ],
      "metadata": {
        "id": "JMZmheVHOpxd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_excel('dados2Proj_.xlsx')"
      ],
      "metadata": {
        "id": "7bpSEpSrGQp6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UeDMf2FbJJ6X",
        "outputId": "7436d4db-d338-4599-ced6-918f9853dc36"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             COD      Setor  Multiplo_EV_EBITDA       ROI    Pais      NYSE  \\\n",
              "0    J507531J784  Alimentos            1.688712  1.195000   Japao  0.145000   \n",
              "1    F483915F346  Alimentos            1.846024  2.388000  Brasil  0.875000   \n",
              "2    J960671I293  Alimentos            0.558691  1.811000  Brasil  0.427000   \n",
              "3    G614024H369  Alimentos            1.141517  1.051000   India  0.040000   \n",
              "4    C581769D510  Alimentos            1.782047  2.687000   Japao  0.377000   \n",
              "..           ...        ...                 ...       ...     ...       ...   \n",
              "586  E205882M929     Varejo           71.828375  1.686552   Japao  0.607398   \n",
              "587  J300735K262     Varejo           67.476503  1.646937   Japao  0.620734   \n",
              "588  I498599I283     Varejo           66.192739  1.704024   Japao  0.611800   \n",
              "589  C804263E544     Varejo           64.487254  1.774546   Japao  0.624582   \n",
              "590  I982869G761     Varejo           62.421824  1.745241   Japao  0.612006   \n",
              "\n",
              "       Cripto       fid        acao        inv_RS         inv_PI  NPS  \\\n",
              "0    0.186600  0.948200  108.440984  9.247931e+05  189258.201919   81   \n",
              "1    0.001000  0.994500   82.518811  9.140209e+05  193433.002848   91   \n",
              "2    0.000000  0.575100  104.437355  9.167629e+05  199654.108444   98   \n",
              "3    0.000000  0.973700  113.235817  8.603724e+05  194796.905586   51   \n",
              "4    0.896700  0.244100   96.234188  8.900884e+05  197808.190354   95   \n",
              "..        ...       ...         ...           ...            ...  ...   \n",
              "586  0.233667  0.787800  177.557826  8.780089e+05  195079.203726   89   \n",
              "587  0.238160  0.204159  174.169847  8.772901e+05  194768.890129    8   \n",
              "588  0.250564  0.203817  182.868527  1.062242e+06  195533.129541   -2   \n",
              "589  0.278112  0.203214  193.030066  1.245897e+06  195460.997625    0   \n",
              "590  0.269817  0.203871  224.820999  1.242579e+06  197433.552446   46   \n",
              "\n",
              "    Fac_Mul_EV_EBITDA Fac_NYSE    Fac_fid Fac_inv_RS          Fac_NPS  \n",
              "0              nivel2    baixo  excelente       alto       excelencia  \n",
              "1              nivel2     alto  excelente       alto     encantamento  \n",
              "2              nivel1    medio        bom       alto     encantamento  \n",
              "3              nivel2    baixo  excelente       alto        qualidade  \n",
              "4              nivel2    medio       ruim       alto     encantamento  \n",
              "..                ...      ...        ...        ...              ...  \n",
              "586            nivel7    medio  excelente       alto       excelencia  \n",
              "587            nivel7    medio       ruim       alto  aperfeicoamento  \n",
              "588            nivel7    medio       ruim       alto  aperfeicoamento  \n",
              "589            nivel7    medio       ruim       alto  aperfeicoamento  \n",
              "590            nivel7    medio       ruim       alto  aperfeicoamento  \n",
              "\n",
              "[591 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e1084806-3daa-4dcd-82ae-04e9e8c5fe48\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>COD</th>\n",
              "      <th>Setor</th>\n",
              "      <th>Multiplo_EV_EBITDA</th>\n",
              "      <th>ROI</th>\n",
              "      <th>Pais</th>\n",
              "      <th>NYSE</th>\n",
              "      <th>Cripto</th>\n",
              "      <th>fid</th>\n",
              "      <th>acao</th>\n",
              "      <th>inv_RS</th>\n",
              "      <th>inv_PI</th>\n",
              "      <th>NPS</th>\n",
              "      <th>Fac_Mul_EV_EBITDA</th>\n",
              "      <th>Fac_NYSE</th>\n",
              "      <th>Fac_fid</th>\n",
              "      <th>Fac_inv_RS</th>\n",
              "      <th>Fac_NPS</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>J507531J784</td>\n",
              "      <td>Alimentos</td>\n",
              "      <td>1.688712</td>\n",
              "      <td>1.195000</td>\n",
              "      <td>Japao</td>\n",
              "      <td>0.145000</td>\n",
              "      <td>0.186600</td>\n",
              "      <td>0.948200</td>\n",
              "      <td>108.440984</td>\n",
              "      <td>9.247931e+05</td>\n",
              "      <td>189258.201919</td>\n",
              "      <td>81</td>\n",
              "      <td>nivel2</td>\n",
              "      <td>baixo</td>\n",
              "      <td>excelente</td>\n",
              "      <td>alto</td>\n",
              "      <td>excelencia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>F483915F346</td>\n",
              "      <td>Alimentos</td>\n",
              "      <td>1.846024</td>\n",
              "      <td>2.388000</td>\n",
              "      <td>Brasil</td>\n",
              "      <td>0.875000</td>\n",
              "      <td>0.001000</td>\n",
              "      <td>0.994500</td>\n",
              "      <td>82.518811</td>\n",
              "      <td>9.140209e+05</td>\n",
              "      <td>193433.002848</td>\n",
              "      <td>91</td>\n",
              "      <td>nivel2</td>\n",
              "      <td>alto</td>\n",
              "      <td>excelente</td>\n",
              "      <td>alto</td>\n",
              "      <td>encantamento</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>J960671I293</td>\n",
              "      <td>Alimentos</td>\n",
              "      <td>0.558691</td>\n",
              "      <td>1.811000</td>\n",
              "      <td>Brasil</td>\n",
              "      <td>0.427000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.575100</td>\n",
              "      <td>104.437355</td>\n",
              "      <td>9.167629e+05</td>\n",
              "      <td>199654.108444</td>\n",
              "      <td>98</td>\n",
              "      <td>nivel1</td>\n",
              "      <td>medio</td>\n",
              "      <td>bom</td>\n",
              "      <td>alto</td>\n",
              "      <td>encantamento</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>G614024H369</td>\n",
              "      <td>Alimentos</td>\n",
              "      <td>1.141517</td>\n",
              "      <td>1.051000</td>\n",
              "      <td>India</td>\n",
              "      <td>0.040000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.973700</td>\n",
              "      <td>113.235817</td>\n",
              "      <td>8.603724e+05</td>\n",
              "      <td>194796.905586</td>\n",
              "      <td>51</td>\n",
              "      <td>nivel2</td>\n",
              "      <td>baixo</td>\n",
              "      <td>excelente</td>\n",
              "      <td>alto</td>\n",
              "      <td>qualidade</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>C581769D510</td>\n",
              "      <td>Alimentos</td>\n",
              "      <td>1.782047</td>\n",
              "      <td>2.687000</td>\n",
              "      <td>Japao</td>\n",
              "      <td>0.377000</td>\n",
              "      <td>0.896700</td>\n",
              "      <td>0.244100</td>\n",
              "      <td>96.234188</td>\n",
              "      <td>8.900884e+05</td>\n",
              "      <td>197808.190354</td>\n",
              "      <td>95</td>\n",
              "      <td>nivel2</td>\n",
              "      <td>medio</td>\n",
              "      <td>ruim</td>\n",
              "      <td>alto</td>\n",
              "      <td>encantamento</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>586</th>\n",
              "      <td>E205882M929</td>\n",
              "      <td>Varejo</td>\n",
              "      <td>71.828375</td>\n",
              "      <td>1.686552</td>\n",
              "      <td>Japao</td>\n",
              "      <td>0.607398</td>\n",
              "      <td>0.233667</td>\n",
              "      <td>0.787800</td>\n",
              "      <td>177.557826</td>\n",
              "      <td>8.780089e+05</td>\n",
              "      <td>195079.203726</td>\n",
              "      <td>89</td>\n",
              "      <td>nivel7</td>\n",
              "      <td>medio</td>\n",
              "      <td>excelente</td>\n",
              "      <td>alto</td>\n",
              "      <td>excelencia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>587</th>\n",
              "      <td>J300735K262</td>\n",
              "      <td>Varejo</td>\n",
              "      <td>67.476503</td>\n",
              "      <td>1.646937</td>\n",
              "      <td>Japao</td>\n",
              "      <td>0.620734</td>\n",
              "      <td>0.238160</td>\n",
              "      <td>0.204159</td>\n",
              "      <td>174.169847</td>\n",
              "      <td>8.772901e+05</td>\n",
              "      <td>194768.890129</td>\n",
              "      <td>8</td>\n",
              "      <td>nivel7</td>\n",
              "      <td>medio</td>\n",
              "      <td>ruim</td>\n",
              "      <td>alto</td>\n",
              "      <td>aperfeicoamento</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>588</th>\n",
              "      <td>I498599I283</td>\n",
              "      <td>Varejo</td>\n",
              "      <td>66.192739</td>\n",
              "      <td>1.704024</td>\n",
              "      <td>Japao</td>\n",
              "      <td>0.611800</td>\n",
              "      <td>0.250564</td>\n",
              "      <td>0.203817</td>\n",
              "      <td>182.868527</td>\n",
              "      <td>1.062242e+06</td>\n",
              "      <td>195533.129541</td>\n",
              "      <td>-2</td>\n",
              "      <td>nivel7</td>\n",
              "      <td>medio</td>\n",
              "      <td>ruim</td>\n",
              "      <td>alto</td>\n",
              "      <td>aperfeicoamento</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>589</th>\n",
              "      <td>C804263E544</td>\n",
              "      <td>Varejo</td>\n",
              "      <td>64.487254</td>\n",
              "      <td>1.774546</td>\n",
              "      <td>Japao</td>\n",
              "      <td>0.624582</td>\n",
              "      <td>0.278112</td>\n",
              "      <td>0.203214</td>\n",
              "      <td>193.030066</td>\n",
              "      <td>1.245897e+06</td>\n",
              "      <td>195460.997625</td>\n",
              "      <td>0</td>\n",
              "      <td>nivel7</td>\n",
              "      <td>medio</td>\n",
              "      <td>ruim</td>\n",
              "      <td>alto</td>\n",
              "      <td>aperfeicoamento</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>590</th>\n",
              "      <td>I982869G761</td>\n",
              "      <td>Varejo</td>\n",
              "      <td>62.421824</td>\n",
              "      <td>1.745241</td>\n",
              "      <td>Japao</td>\n",
              "      <td>0.612006</td>\n",
              "      <td>0.269817</td>\n",
              "      <td>0.203871</td>\n",
              "      <td>224.820999</td>\n",
              "      <td>1.242579e+06</td>\n",
              "      <td>197433.552446</td>\n",
              "      <td>46</td>\n",
              "      <td>nivel7</td>\n",
              "      <td>medio</td>\n",
              "      <td>ruim</td>\n",
              "      <td>alto</td>\n",
              "      <td>aperfeicoamento</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>591 rows × 17 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e1084806-3daa-4dcd-82ae-04e9e8c5fe48')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e1084806-3daa-4dcd-82ae-04e9e8c5fe48 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e1084806-3daa-4dcd-82ae-04e9e8c5fe48');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## RENOMEAÇÃO DE COLUNAS PARA MELHOR INTERPRETAÇÃO"
      ],
      "metadata": {
        "id": "QMCi_UIkOwvh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.rename(columns={'COD':'codigoEmpresa',\n",
        "                   'fid':'fidelizacao_clientes',\n",
        "                   'inv_RS':'inv_publi_sociais',\n",
        "                   'inv_PI':'inv_publi_impressa',\n",
        "                   'Fac_fid':'Fac_fidelizacao',\n",
        "                   'Fac_inv_RS':'Fac_inv_publi_sociais'}, inplace=True)"
      ],
      "metadata": {
        "id": "F47B2-YMKi_1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nQO1pJvsQ3pY",
        "outputId": "0a65de9e-87a6-46ba-d053-ed6b5d15aec3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    codigoEmpresa      Setor  Multiplo_EV_EBITDA       ROI    Pais      NYSE  \\\n",
              "0     J507531J784  Alimentos            1.688712  1.195000   Japao  0.145000   \n",
              "1     F483915F346  Alimentos            1.846024  2.388000  Brasil  0.875000   \n",
              "2     J960671I293  Alimentos            0.558691  1.811000  Brasil  0.427000   \n",
              "3     G614024H369  Alimentos            1.141517  1.051000   India  0.040000   \n",
              "4     C581769D510  Alimentos            1.782047  2.687000   Japao  0.377000   \n",
              "..            ...        ...                 ...       ...     ...       ...   \n",
              "586   E205882M929     Varejo           71.828375  1.686552   Japao  0.607398   \n",
              "587   J300735K262     Varejo           67.476503  1.646937   Japao  0.620734   \n",
              "588   I498599I283     Varejo           66.192739  1.704024   Japao  0.611800   \n",
              "589   C804263E544     Varejo           64.487254  1.774546   Japao  0.624582   \n",
              "590   I982869G761     Varejo           62.421824  1.745241   Japao  0.612006   \n",
              "\n",
              "       Cripto  fidelizacao_clientes        acao  inv_publi_sociais  \\\n",
              "0    0.186600              0.948200  108.440984       9.247931e+05   \n",
              "1    0.001000              0.994500   82.518811       9.140209e+05   \n",
              "2    0.000000              0.575100  104.437355       9.167629e+05   \n",
              "3    0.000000              0.973700  113.235817       8.603724e+05   \n",
              "4    0.896700              0.244100   96.234188       8.900884e+05   \n",
              "..        ...                   ...         ...                ...   \n",
              "586  0.233667              0.787800  177.557826       8.780089e+05   \n",
              "587  0.238160              0.204159  174.169847       8.772901e+05   \n",
              "588  0.250564              0.203817  182.868527       1.062242e+06   \n",
              "589  0.278112              0.203214  193.030066       1.245897e+06   \n",
              "590  0.269817              0.203871  224.820999       1.242579e+06   \n",
              "\n",
              "     inv_publi_impressa  NPS Fac_Mul_EV_EBITDA Fac_NYSE Fac_fidelizacao  \\\n",
              "0         189258.201919   81            nivel2    baixo       excelente   \n",
              "1         193433.002848   91            nivel2     alto       excelente   \n",
              "2         199654.108444   98            nivel1    medio             bom   \n",
              "3         194796.905586   51            nivel2    baixo       excelente   \n",
              "4         197808.190354   95            nivel2    medio            ruim   \n",
              "..                  ...  ...               ...      ...             ...   \n",
              "586       195079.203726   89            nivel7    medio       excelente   \n",
              "587       194768.890129    8            nivel7    medio            ruim   \n",
              "588       195533.129541   -2            nivel7    medio            ruim   \n",
              "589       195460.997625    0            nivel7    medio            ruim   \n",
              "590       197433.552446   46            nivel7    medio            ruim   \n",
              "\n",
              "    Fac_inv_publi_sociais          Fac_NPS  \n",
              "0                    alto       excelencia  \n",
              "1                    alto     encantamento  \n",
              "2                    alto     encantamento  \n",
              "3                    alto        qualidade  \n",
              "4                    alto     encantamento  \n",
              "..                    ...              ...  \n",
              "586                  alto       excelencia  \n",
              "587                  alto  aperfeicoamento  \n",
              "588                  alto  aperfeicoamento  \n",
              "589                  alto  aperfeicoamento  \n",
              "590                  alto  aperfeicoamento  \n",
              "\n",
              "[591 rows x 17 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-262aac28-d7fb-46d7-ac02-a392d2eb9436\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>codigoEmpresa</th>\n",
              "      <th>Setor</th>\n",
              "      <th>Multiplo_EV_EBITDA</th>\n",
              "      <th>ROI</th>\n",
              "      <th>Pais</th>\n",
              "      <th>NYSE</th>\n",
              "      <th>Cripto</th>\n",
              "      <th>fidelizacao_clientes</th>\n",
              "      <th>acao</th>\n",
              "      <th>inv_publi_sociais</th>\n",
              "      <th>inv_publi_impressa</th>\n",
              "      <th>NPS</th>\n",
              "      <th>Fac_Mul_EV_EBITDA</th>\n",
              "      <th>Fac_NYSE</th>\n",
              "      <th>Fac_fidelizacao</th>\n",
              "      <th>Fac_inv_publi_sociais</th>\n",
              "      <th>Fac_NPS</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>J507531J784</td>\n",
              "      <td>Alimentos</td>\n",
              "      <td>1.688712</td>\n",
              "      <td>1.195000</td>\n",
              "      <td>Japao</td>\n",
              "      <td>0.145000</td>\n",
              "      <td>0.186600</td>\n",
              "      <td>0.948200</td>\n",
              "      <td>108.440984</td>\n",
              "      <td>9.247931e+05</td>\n",
              "      <td>189258.201919</td>\n",
              "      <td>81</td>\n",
              "      <td>nivel2</td>\n",
              "      <td>baixo</td>\n",
              "      <td>excelente</td>\n",
              "      <td>alto</td>\n",
              "      <td>excelencia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>F483915F346</td>\n",
              "      <td>Alimentos</td>\n",
              "      <td>1.846024</td>\n",
              "      <td>2.388000</td>\n",
              "      <td>Brasil</td>\n",
              "      <td>0.875000</td>\n",
              "      <td>0.001000</td>\n",
              "      <td>0.994500</td>\n",
              "      <td>82.518811</td>\n",
              "      <td>9.140209e+05</td>\n",
              "      <td>193433.002848</td>\n",
              "      <td>91</td>\n",
              "      <td>nivel2</td>\n",
              "      <td>alto</td>\n",
              "      <td>excelente</td>\n",
              "      <td>alto</td>\n",
              "      <td>encantamento</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>J960671I293</td>\n",
              "      <td>Alimentos</td>\n",
              "      <td>0.558691</td>\n",
              "      <td>1.811000</td>\n",
              "      <td>Brasil</td>\n",
              "      <td>0.427000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.575100</td>\n",
              "      <td>104.437355</td>\n",
              "      <td>9.167629e+05</td>\n",
              "      <td>199654.108444</td>\n",
              "      <td>98</td>\n",
              "      <td>nivel1</td>\n",
              "      <td>medio</td>\n",
              "      <td>bom</td>\n",
              "      <td>alto</td>\n",
              "      <td>encantamento</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>G614024H369</td>\n",
              "      <td>Alimentos</td>\n",
              "      <td>1.141517</td>\n",
              "      <td>1.051000</td>\n",
              "      <td>India</td>\n",
              "      <td>0.040000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.973700</td>\n",
              "      <td>113.235817</td>\n",
              "      <td>8.603724e+05</td>\n",
              "      <td>194796.905586</td>\n",
              "      <td>51</td>\n",
              "      <td>nivel2</td>\n",
              "      <td>baixo</td>\n",
              "      <td>excelente</td>\n",
              "      <td>alto</td>\n",
              "      <td>qualidade</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>C581769D510</td>\n",
              "      <td>Alimentos</td>\n",
              "      <td>1.782047</td>\n",
              "      <td>2.687000</td>\n",
              "      <td>Japao</td>\n",
              "      <td>0.377000</td>\n",
              "      <td>0.896700</td>\n",
              "      <td>0.244100</td>\n",
              "      <td>96.234188</td>\n",
              "      <td>8.900884e+05</td>\n",
              "      <td>197808.190354</td>\n",
              "      <td>95</td>\n",
              "      <td>nivel2</td>\n",
              "      <td>medio</td>\n",
              "      <td>ruim</td>\n",
              "      <td>alto</td>\n",
              "      <td>encantamento</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>586</th>\n",
              "      <td>E205882M929</td>\n",
              "      <td>Varejo</td>\n",
              "      <td>71.828375</td>\n",
              "      <td>1.686552</td>\n",
              "      <td>Japao</td>\n",
              "      <td>0.607398</td>\n",
              "      <td>0.233667</td>\n",
              "      <td>0.787800</td>\n",
              "      <td>177.557826</td>\n",
              "      <td>8.780089e+05</td>\n",
              "      <td>195079.203726</td>\n",
              "      <td>89</td>\n",
              "      <td>nivel7</td>\n",
              "      <td>medio</td>\n",
              "      <td>excelente</td>\n",
              "      <td>alto</td>\n",
              "      <td>excelencia</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>587</th>\n",
              "      <td>J300735K262</td>\n",
              "      <td>Varejo</td>\n",
              "      <td>67.476503</td>\n",
              "      <td>1.646937</td>\n",
              "      <td>Japao</td>\n",
              "      <td>0.620734</td>\n",
              "      <td>0.238160</td>\n",
              "      <td>0.204159</td>\n",
              "      <td>174.169847</td>\n",
              "      <td>8.772901e+05</td>\n",
              "      <td>194768.890129</td>\n",
              "      <td>8</td>\n",
              "      <td>nivel7</td>\n",
              "      <td>medio</td>\n",
              "      <td>ruim</td>\n",
              "      <td>alto</td>\n",
              "      <td>aperfeicoamento</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>588</th>\n",
              "      <td>I498599I283</td>\n",
              "      <td>Varejo</td>\n",
              "      <td>66.192739</td>\n",
              "      <td>1.704024</td>\n",
              "      <td>Japao</td>\n",
              "      <td>0.611800</td>\n",
              "      <td>0.250564</td>\n",
              "      <td>0.203817</td>\n",
              "      <td>182.868527</td>\n",
              "      <td>1.062242e+06</td>\n",
              "      <td>195533.129541</td>\n",
              "      <td>-2</td>\n",
              "      <td>nivel7</td>\n",
              "      <td>medio</td>\n",
              "      <td>ruim</td>\n",
              "      <td>alto</td>\n",
              "      <td>aperfeicoamento</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>589</th>\n",
              "      <td>C804263E544</td>\n",
              "      <td>Varejo</td>\n",
              "      <td>64.487254</td>\n",
              "      <td>1.774546</td>\n",
              "      <td>Japao</td>\n",
              "      <td>0.624582</td>\n",
              "      <td>0.278112</td>\n",
              "      <td>0.203214</td>\n",
              "      <td>193.030066</td>\n",
              "      <td>1.245897e+06</td>\n",
              "      <td>195460.997625</td>\n",
              "      <td>0</td>\n",
              "      <td>nivel7</td>\n",
              "      <td>medio</td>\n",
              "      <td>ruim</td>\n",
              "      <td>alto</td>\n",
              "      <td>aperfeicoamento</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>590</th>\n",
              "      <td>I982869G761</td>\n",
              "      <td>Varejo</td>\n",
              "      <td>62.421824</td>\n",
              "      <td>1.745241</td>\n",
              "      <td>Japao</td>\n",
              "      <td>0.612006</td>\n",
              "      <td>0.269817</td>\n",
              "      <td>0.203871</td>\n",
              "      <td>224.820999</td>\n",
              "      <td>1.242579e+06</td>\n",
              "      <td>197433.552446</td>\n",
              "      <td>46</td>\n",
              "      <td>nivel7</td>\n",
              "      <td>medio</td>\n",
              "      <td>ruim</td>\n",
              "      <td>alto</td>\n",
              "      <td>aperfeicoamento</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>591 rows × 17 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-262aac28-d7fb-46d7-ac02-a392d2eb9436')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-262aac28-d7fb-46d7-ac02-a392d2eb9436 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-262aac28-d7fb-46d7-ac02-a392d2eb9436');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k_fa6A-x8CcN",
        "outputId": "49adb6ab-a294-4574-ea2c-bc1b013c92ae"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(591, 17)"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## DATA CLEANING/PREPARATION\n",
        "CERTIFICAÇÃO SE HÁ VALORES NULOS E LINHAS DUPLICADAS. ALÉM DISSO, ALTERAÇÃO DOS TIPO DE DADOS."
      ],
      "metadata": {
        "id": "-zgi0poHO2jz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rEIHTFqXHH2e",
        "outputId": "2ee9a6c1-5bf1-4ddf-b058-a75461530e11"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 591 entries, 0 to 590\n",
            "Data columns (total 17 columns):\n",
            " #   Column                 Non-Null Count  Dtype  \n",
            "---  ------                 --------------  -----  \n",
            " 0   codigoEmpresa          591 non-null    object \n",
            " 1   Setor                  591 non-null    object \n",
            " 2   Multiplo_EV_EBITDA     539 non-null    float64\n",
            " 3   ROI                    591 non-null    float64\n",
            " 4   Pais                   591 non-null    object \n",
            " 5   NYSE                   591 non-null    float64\n",
            " 6   Cripto                 591 non-null    float64\n",
            " 7   fidelizacao_clientes   591 non-null    float64\n",
            " 8   acao                   591 non-null    float64\n",
            " 9   inv_publi_sociais      591 non-null    float64\n",
            " 10  inv_publi_impressa     591 non-null    float64\n",
            " 11  NPS                    591 non-null    int64  \n",
            " 12  Fac_Mul_EV_EBITDA      539 non-null    object \n",
            " 13  Fac_NYSE               591 non-null    object \n",
            " 14  Fac_fidelizacao        591 non-null    object \n",
            " 15  Fac_inv_publi_sociais  591 non-null    object \n",
            " 16  Fac_NPS                591 non-null    object \n",
            "dtypes: float64(8), int64(1), object(8)\n",
            "memory usage: 78.6+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Alterando objects para category\n",
        "cat_cols = df.select_dtypes(include='object').columns\n",
        "df[cat_cols] = df[cat_cols].astype('category')"
      ],
      "metadata": {
        "id": "ivz-OW3mPXLJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WF_pW-PKQR5k",
        "outputId": "46d08085-33a3-484f-de26-9dc9ebdcb433"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 591 entries, 0 to 590\n",
            "Data columns (total 17 columns):\n",
            " #   Column                 Non-Null Count  Dtype   \n",
            "---  ------                 --------------  -----   \n",
            " 0   codigoEmpresa          591 non-null    category\n",
            " 1   Setor                  591 non-null    category\n",
            " 2   Multiplo_EV_EBITDA     539 non-null    float64 \n",
            " 3   ROI                    591 non-null    float64 \n",
            " 4   Pais                   591 non-null    category\n",
            " 5   NYSE                   591 non-null    float64 \n",
            " 6   Cripto                 591 non-null    float64 \n",
            " 7   fidelizacao_clientes   591 non-null    float64 \n",
            " 8   acao                   591 non-null    float64 \n",
            " 9   inv_publi_sociais      591 non-null    float64 \n",
            " 10  inv_publi_impressa     591 non-null    float64 \n",
            " 11  NPS                    591 non-null    int64   \n",
            " 12  Fac_Mul_EV_EBITDA      539 non-null    category\n",
            " 13  Fac_NYSE               591 non-null    category\n",
            " 14  Fac_fidelizacao        591 non-null    category\n",
            " 15  Fac_inv_publi_sociais  591 non-null    category\n",
            " 16  Fac_NPS                591 non-null    category\n",
            "dtypes: category(8), float64(8), int64(1)\n",
            "memory usage: 69.3 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Conferência de duplicatas\n",
        "df.duplicated(keep=False).sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_N0m6-FiINuy",
        "outputId": "4ebcd240-f304-443e-ccac-1eef9f67d15e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## FILTRAGEM DOS DADOS DE ACORDO COM O NOSSO GRUPO (15) - GLOBAL"
      ],
      "metadata": {
        "id": "OtK2D9iiQdRq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_transit = df[(df['Pais'] == 'EUA')|(df['Pais'] == 'China')]\n",
        "df_global = df_transit[(df_transit['Setor'] == 'Tecnologia') | (df_transit['Setor'] == 'Varejo')]"
      ],
      "metadata": {
        "id": "BrCW-ZwEMi__"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_global = df_global.reset_index(drop=True)"
      ],
      "metadata": {
        "id": "jZ9EwzGsM17r"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_global = df_global[df_global['Pais'].isin(['China', 'EUA'])]"
      ],
      "metadata": {
        "id": "55qK2bUrN4NU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_global['Pais'] = df_global['Pais'].cat.remove_unused_categories()\n",
        "df_global['Setor'] = df_global['Setor'].cat.remove_unused_categories()"
      ],
      "metadata": {
        "id": "WsIhT9qYqFJX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_global[['NYSE','NPS']].describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vcqZssoHvADX",
        "outputId": "19fdc0af-ded1-45bd-f791-3cc1e6e3f405"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            NYSE        NPS\n",
              "count  31.000000  31.000000\n",
              "mean    0.538309  51.516129\n",
              "std     0.259395  34.503981\n",
              "min     0.002000   0.000000\n",
              "25%     0.353500  22.000000\n",
              "50%     0.594000  62.000000\n",
              "75%     0.683679  78.500000\n",
              "max     0.990000  99.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-602dbcff-35e9-4cc4-a9da-1870a52af3f6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>NYSE</th>\n",
              "      <th>NPS</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>31.000000</td>\n",
              "      <td>31.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>0.538309</td>\n",
              "      <td>51.516129</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.259395</td>\n",
              "      <td>34.503981</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.002000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>0.353500</td>\n",
              "      <td>22.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>0.594000</td>\n",
              "      <td>62.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>0.683679</td>\n",
              "      <td>78.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>0.990000</td>\n",
              "      <td>99.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-602dbcff-35e9-4cc4-a9da-1870a52af3f6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-602dbcff-35e9-4cc4-a9da-1870a52af3f6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-602dbcff-35e9-4cc4-a9da-1870a52af3f6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Teste Qui-Quadrado em relação ao global"
      ],
      "metadata": {
        "id": "Uzv9_Iai3_3w"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "crosstab = pd.crosstab(df_global['Fac_NYSE'], df_global['Fac_NPS'])\n",
        "crosstab"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 175
        },
        "id": "YNrPECR9R04d",
        "outputId": "89b4c446-38af-4e03-d6a6-bf483feef590"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Fac_NPS   aperfeicoamento  encantamento  excelencia  qualidade\n",
              "Fac_NYSE                                                      \n",
              "alto                    3             1           1          2\n",
              "baixo                   3             1           0          0\n",
              "medio                   8             4           2          6"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fd4c0259-c47b-4fe9-ab60-f025c03ab656\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>Fac_NPS</th>\n",
              "      <th>aperfeicoamento</th>\n",
              "      <th>encantamento</th>\n",
              "      <th>excelencia</th>\n",
              "      <th>qualidade</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fac_NYSE</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>alto</th>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>baixo</th>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>medio</th>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fd4c0259-c47b-4fe9-ab60-f025c03ab656')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fd4c0259-c47b-4fe9-ab60-f025c03ab656 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fd4c0259-c47b-4fe9-ab60-f025c03ab656');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "chi, p, dof, expected = stats.chi2_contingency(crosstab)"
      ],
      "metadata": {
        "id": "HFaNahx5Svur"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print('CHI: ',chi)\n",
        "print('P: ',p)\n",
        "print('DOF: ',dof)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rPFl74VYS94K",
        "outputId": "ee9e0df6-9dbc-4046-9a1d-0e0197bb8b07"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "CHI:  2.8100340136054425\n",
            "P:  0.8322840038482341\n",
            "DOF:  6\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.scatterplot(x='NPS', y='NYSE', data=df_global);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "Dt5GJnkQnXY2",
        "outputId": "7d96a63f-c5bd-4047-e708-d83b81e6e913"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(13,13))\n",
        "sns.heatmap(df_global.corr(), cmap='coolwarm', annot=True);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "ZMYkYIdu4Uw6",
        "outputId": "35b7490b-3862-4c76-faea-36014c63f175"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-23-76362f59679c>:2: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n",
            "  sns.heatmap(df_global.corr(), cmap='coolwarm', annot=True);\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1300x1300 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Filtrando o extrato 1 e fazendo teste anova (NYSE no Varejo da China e EUA)"
      ],
      "metadata": {
        "id": "daHtRryd0AOt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Filtrando o setor de varejo\n",
        "df_varejo = df_global[df_global['Setor'] == 'Varejo']"
      ],
      "metadata": {
        "id": "xGmr3w-5gmxn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Separando o nosso df global em extratos de países\n",
        "df_varejo_china = df_varejo[df_varejo.Pais == 'China']\n",
        "df_varejo_eua = df_varejo[df_varejo.Pais == 'EUA']"
      ],
      "metadata": {
        "id": "FlJWXWmZg4k9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Resumindo os df apenas na coluna NYSE\n",
        "df_nyse_varejo_china = df_varejo_china[['NYSE']]\n",
        "df_nyse_varejo_china.rename(columns={'NYSE':'NYSE China'}, inplace=True)\n",
        "df_nyse_varejo_eua = df_varejo_eua[['NYSE']]\n",
        "df_nyse_varejo_eua.rename(columns={'NYSE':'NYSE EUA'}, inplace=True)"
      ],
      "metadata": {
        "id": "h5N9b1lIhSSg",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a58f6eba-5457-421c-f446-35ce8e6366b4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-26-4a679ddf63d7>:3: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  df_nyse_varejo_china.rename(columns={'NYSE':'NYSE China'}, inplace=True)\n",
            "<ipython-input-26-4a679ddf63d7>:5: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  df_nyse_varejo_eua.rename(columns={'NYSE':'NYSE EUA'}, inplace=True)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# TESTE DE NORMALIDADE NYSE CHINA\n",
        "# Dados de exemplo\n",
        "grupo1 = df_nyse_varejo_china\n",
        "\n",
        "# Teste de Shapiro-Wilk para verificar normalidade\n",
        "_, p_valor = shapiro(grupo1)\n",
        "\n",
        "# Verificação do p-valor\n",
        "print(f'P-valor do teste de Shapiro-Wilk: {p_valor}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0MS_dAnDy4ID",
        "outputId": "ef3f5086-bc6d-4091-9d56-a8a610c0ab3d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "P-valor do teste de Shapiro-Wilk: 0.45252060890197754\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.histplot(data=df_nyse_varejo_china, x='NYSE China', kde=True);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "iB3Zqj6-0XCb",
        "outputId": "3ad177db-3080-479a-a9d0-10d104135876"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# TESTE DE NORMALIDADE NYSE EUA\n",
        "# Dados de exemplo\n",
        "grupo1 = df_nyse_varejo_eua\n",
        "\n",
        "# Teste de Shapiro-Wilk para verificar normalidade\n",
        "_, p_valor = shapiro(grupo1)\n",
        "\n",
        "# Verificação do p-valor\n",
        "print(f'P-valor do teste de Shapiro-Wilk: {p_valor}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "liAWr54y0cGU",
        "outputId": "99f257f3-7257-42a1-f7d3-a93bf39b0755"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "P-valor do teste de Shapiro-Wilk: 0.2420954704284668\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.histplot(data=df_nyse_varejo_eua, x='NYSE EUA', kde=True);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "i0heo4OrzzJh",
        "outputId": "fb8cbf94-e55a-48ca-d1ae-e87fccdb8fc7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Teste Homegeneidade\n",
        "# Dados de exemplo\n",
        "grupo1_ = df_nyse_varejo_china['NYSE China'].tolist()\n",
        "grupo2_ = df_nyse_varejo_eua['NYSE EUA'].tolist()\n",
        "\n",
        "\n",
        "# Teste de Bartlett para verificar homogeneidade das variâncias\n",
        "_, p_valor = bartlett(grupo1_, grupo2_)\n",
        "\n",
        "# Verificação do p-valor\n",
        "print(f'P-valor do teste de Bartlett: {p_valor}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9hFVAbAa51S7",
        "outputId": "38dc99b7-b930-45dc-ab4b-9d6cecd5286a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "P-valor do teste de Bartlett: 0.5243389960227285\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import statsmodels.api as sm\n",
        "from statsmodels.formula.api import ols\n",
        "\n",
        "# Dados de exemplo\n",
        "grupo1 = df_nyse_varejo_china['NYSE China'].tolist()\n",
        "grupo2 = df_nyse_varejo_eua['NYSE EUA'].tolist()\n",
        "\n",
        "# Combinação dos dados em um dataframe\n",
        "data = pd.DataFrame({'Pais': ['China']*len(grupo1) + ['EUA']*len(grupo2),\n",
        "                     'NYSE': grupo1 + grupo2})\n",
        "\n",
        "# Ajuste do modelo ANOVA\n",
        "modelo = ols('NYSE ~ Pais', data=data).fit()\n",
        "\n",
        "# Criação da tabela ANOVA\n",
        "tabela_anova = sm.stats.anova_lm(modelo)\n",
        "\n",
        "# Imprimir a tabela ANOVA\n",
        "print(tabela_anova)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p7h7nOs0LKUr",
        "outputId": "567f11b5-1429-4e5f-8f89-b07cc205e8a2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "            df    sum_sq   mean_sq         F    PR(>F)\n",
            "Pais       1.0  0.257081  0.257081  2.517771  0.134892\n",
            "Residual  14.0  1.429495  0.102107       NaN       NaN\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Dados dos grupos\n",
        "grupo1 = df_nyse_varejo_china\n",
        "grupo2 = df_nyse_varejo_eua\n",
        "\n",
        "# Aplicando o teste ANOVA\n",
        "resultado = f_oneway(grupo1, grupo2)\n",
        "\n",
        "# Obtendo o valor-p\n",
        "valor_p1 = resultado.pvalue\n",
        "\n",
        "# Verificando se há diferença significativa\n",
        "print(f'P-Valor = {valor_p1} e Alpha = {0.05}')\n",
        "if valor_p1 < 0.05:\n",
        "    print(\"Há diferença significativa entre as médias dos grupos.\")\n",
        "else:\n",
        "    print(\"Não há diferença significativa entre as médias dos grupos.\")"
      ],
      "metadata": {
        "id": "oUEf3NTX0DJc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "111775bd-f401-4b73-9172-54290a55bf46"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "P-Valor = [0.13489172] e Alpha = 0.05\n",
            "Não há diferença significativa entre as médias dos grupos.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Crie o gráfico de barras ou colunas\n",
        "sns.barplot(x='Pais', y='NYSE', data=data)\n",
        "\n",
        "# Adicione um título ao gráfico\n",
        "plt.title('Médias das Variáveis Dependentes (NYSE) por Pais')\n",
        "plt.ylim(0, 2)\n",
        "# Exiba o gráfico\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "-DbzZrOXAm5Q",
        "outputId": "50d7ba73-a627-41da-942f-df3c1c6c0f5f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Filtrando o extrato 2 e fazendo teste anova (CRIPTO no Varejo da China e EUA)"
      ],
      "metadata": {
        "id": "FNI0uAt_SEgY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Resumindo os df apenas na coluna NPS\n",
        "df_cripto_varejo_china = df_varejo_china[['Cripto']]\n",
        "df_cripto_varejo_china.rename(columns={'Cripto':'Cripto China'}, inplace=True)\n",
        "df_cripto_varejo_eua = df_varejo_eua[['Cripto']]\n",
        "df_cripto_varejo_eua.rename(columns={'Cripto':'Cripto EUA'}, inplace=True)"
      ],
      "metadata": {
        "id": "RpG1OlgaSKHM",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0d3aba56-38f8-4a65-d248-e34077f6b3f9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-35-fce7f6116875>:3: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  df_cripto_varejo_china.rename(columns={'Cripto':'Cripto China'}, inplace=True)\n",
            "<ipython-input-35-fce7f6116875>:5: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  df_cripto_varejo_eua.rename(columns={'Cripto':'Cripto EUA'}, inplace=True)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# TESTE DE NORMALIDADE Cripto CHINA\n",
        "# Dados de exemplo\n",
        "grupo1 = df_cripto_varejo_china\n",
        "\n",
        "# Teste de Shapiro-Wilk para verificar normalidade\n",
        "_, p_valor = shapiro(grupo1)\n",
        "\n",
        "# Verificação do p-valor\n",
        "print(f'P-valor do teste de Shapiro-Wilk: {p_valor}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DwUebRrnegVe",
        "outputId": "795aaa11-148d-49d9-b950-658dfffb3ac3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "P-valor do teste de Shapiro-Wilk: 0.01670275814831257\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.histplot(data=df_cripto_varejo_china,x='Cripto China', kde=True);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "C-uQ6YPuir0H",
        "outputId": "56fb58f4-fe0c-49ff-c6c7-bd100e7d807b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# TESTE DE NORMALIDADE Cripto EUA\n",
        "# Dados de exemplo\n",
        "grupo1 = df_cripto_varejo_eua\n",
        "\n",
        "# Teste de Shapiro-Wilk para verificar normalidade\n",
        "_, p_valor = shapiro(grupo1)\n",
        "\n",
        "# Verificação do p-valor\n",
        "print(f'P-valor do teste de Shapiro-Wilk: {p_valor}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BE69kAyrgsoI",
        "outputId": "f0299196-e3a2-49f2-bb59-987ea606eaed"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "P-valor do teste de Shapiro-Wilk: 0.9382020831108093\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.histplot(data=df_cripto_varejo_eua,x='Cripto EUA', kde=True);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "HzcRW-tXivk4",
        "outputId": "1aaa5f4a-d598-4879-9fbe-a83db6c9aaa2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Dados de exemplo\n",
        "grupo1 = df_cripto_varejo_china['Cripto China'].tolist()\n",
        "grupo2 = df_cripto_varejo_eua['Cripto EUA'].tolist()\n",
        "\n",
        "# Combinação dos dados em um dataframe\n",
        "data = pd.DataFrame({'grupo': ['grupo1']*len(grupo1) + ['grupo2']*len(grupo2),\n",
        "                     'valor': grupo1 + grupo2})\n",
        "\n",
        "# Ajuste do modelo ANOVA\n",
        "modelo = ols('valor ~ grupo', data=data).fit()\n",
        "\n",
        "# Criação da tabela ANOVA\n",
        "tabela_anova = sm.stats.anova_lm(modelo)\n",
        "\n",
        "# Imprimir a tabela ANOVA\n",
        "print(tabela_anova)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "v8zGw0KISxcA",
        "outputId": "2b45d196-a812-4f1f-a7e9-c3ec4b5b5ba8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "            df    sum_sq   mean_sq        F   PR(>F)\n",
            "grupo      1.0  0.001213  0.001213  0.02151  0.88549\n",
            "Residual  14.0  0.789704  0.056407      NaN      NaN\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Dados dos grupos\n",
        "grupo1 = df_cripto_varejo_china\n",
        "grupo2 = df_cripto_varejo_eua\n",
        "\n",
        "# Aplicando o teste ANOVA\n",
        "resultado = f_oneway(grupo1, grupo2)\n",
        "\n",
        "# Obtendo o valor-p\n",
        "valor_p = resultado.pvalue\n",
        "\n",
        "# Verificando se há diferença significativa\n",
        "print(f'P-Valor = {valor_p} e Alpha = {0.05}')\n",
        "if valor_p < 0.05:\n",
        "    print(\"Há diferença significativa entre as médias dos grupos.\")\n",
        "else:\n",
        "    print(\"Não há diferença significativa entre as médias dos grupos.\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nLH6kpoOSkTH",
        "outputId": "e5f5078e-bb82-4b82-9ea9-eedfa308f5b8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "P-Valor = [0.88548995] e Alpha = 0.05\n",
            "Não há diferença significativa entre as médias dos grupos.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_cripto_varejo_china"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 394
        },
        "id": "TIFYiFnBt3l8",
        "outputId": "540bbb60-44c0-41b4-e5b6-12f7b33c4a54"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Cripto China\n",
              "16        0.4235\n",
              "17        0.2881\n",
              "18        0.0000\n",
              "19        0.6859\n",
              "20        0.1306\n",
              "21        0.7146\n",
              "22        0.1451\n",
              "23        0.1067\n",
              "26        0.0063\n",
              "29        0.0886\n",
              "30        0.0668"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cf0ed88e-ca99-4d6e-8665-62ce64f7fe2e\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cripto China</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>0.4235</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>0.2881</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>0.0000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>0.6859</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>0.1306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>0.7146</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>0.1451</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>0.1067</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>0.0063</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>0.0886</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>0.0668</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf0ed88e-ca99-4d6e-8665-62ce64f7fe2e')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cf0ed88e-ca99-4d6e-8665-62ce64f7fe2e button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cf0ed88e-ca99-4d6e-8665-62ce64f7fe2e');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    }
  ]
}